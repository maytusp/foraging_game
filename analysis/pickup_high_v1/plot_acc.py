import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd
import numpy as np
import os

pickup_high_avg_accuracy_dict_emb = {'score': [0.2986666666666667, 0.296, 0.31, 0.26266666666666666, 0.25533333333333336, 0.252, 0.25933333333333336, 0.274, 0.2733333333333333, 0.376, 0.3393333333333333, 0.3313333333333333, 0.414, 0.3913333333333333, 0.38333333333333336, 0.38133333333333336, 0.36, 0.35733333333333334, 0.37333333333333335, 0.408, 0.37133333333333335, 0.454, 0.45466666666666666, 0.402, 0.3973333333333333, 0.42, 0.438], 'vertical position': [0.6073333333333333, 0.6126666666666667, 0.6093333333333333, 0.5826666666666667, 0.5926666666666667, 0.5986666666666667, 0.6413333333333333, 0.6473333333333333, 0.6526666666666666, 0.8646666666666667, 0.8633333333333333, 0.8666666666666667, 0.8526666666666667, 0.8533333333333334, 0.8446666666666667, 0.724, 0.724, 0.7353333333333333, 0.8486666666666667, 0.872, 0.8546666666666667, 0.8366666666666667, 0.83, 0.834, 0.8346666666666667, 0.8213333333333334, 0.846], 'horizontal position': [0.30866666666666664, 0.31533333333333335, 0.31933333333333336, 0.30466666666666664, 0.31066666666666665, 0.296, 0.30133333333333334, 0.30866666666666664, 0.32, 0.244, 0.25266666666666665, 0.23533333333333334, 0.2833333333333333, 0.2793333333333333, 0.2966666666666667, 0.2773333333333333, 0.27266666666666667, 0.2853333333333333, 0.3, 0.2633333333333333, 0.25666666666666665, 0.2966666666666667, 0.282, 0.2846666666666667, 0.30933333333333335, 0.2966666666666667, 0.276]}


pickup_high_avg_accuracy_dict_token = {'score': [0.16333333333333333, 0.162, 0.162, 0.16266666666666665, 0.16133333333333333, 0.15933333333333333, 0.17733333333333334, 0.186, 0.17666666666666667, 0.24333333333333335, 0.19866666666666666, 0.20266666666666666, 0.23866666666666667, 0.21333333333333335, 0.222, 0.28, 0.25066666666666665, 0.26066666666666666, 0.35733333333333334, 0.32466666666666666, 0.2886666666666667, 0.36533333333333334, 0.38, 0.332, 0.26066666666666666, 0.24333333333333335, 0.254], 'vertical position': [0.576, 0.556, 0.576, 0.5613333333333334, 0.5506666666666666, 0.5433333333333333, 0.5773333333333334, 0.582, 0.5753333333333334, 0.6233333333333333, 0.6806666666666666, 0.652, 0.676, 0.6773333333333333, 0.692, 0.5846666666666667, 0.608, 0.602, 0.676, 0.6586666666666666, 0.648, 0.5393333333333333, 0.558, 0.5386666666666666, 0.7453333333333333, 0.7433333333333333, 0.7533333333333333], 'horizontal position': [0.25266666666666665, 0.25066666666666665, 0.25466666666666665, 0.25533333333333336, 0.25466666666666665, 0.24066666666666667, 0.26, 0.266, 0.2753333333333333, 0.24866666666666667, 0.25733333333333336, 0.244, 0.25866666666666666, 0.248, 0.274, 0.25666666666666665, 0.2713333333333333, 0.27066666666666667, 0.24333333333333335, 0.24333333333333335, 0.252, 0.256, 0.242, 0.23733333333333334, 0.25133333333333335, 0.23266666666666666, 0.21866666666666668]}


# Chance levels per variable
chance_levels = {
    'score': 0.10,
    'horizontal position': 0.20,
    'vertical position': 0.50
}

saved_dir = "plots/decoding"
os.makedirs(saved_dir, exist_ok=True)
# Build tidy DataFrame
records = []
for var in ['score', 'horizontal position', 'vertical position']:
    for source_name, source_dict in [('Embedding', pickup_high_avg_accuracy_dict_emb), 
                                     ('Token', pickup_high_avg_accuracy_dict_token)]:
        accs = source_dict[var]
        mean = np.mean(accs)
        std = np.std(accs)
        records.append({'Variable': var, 'Source': source_name, 'Mean': mean, 'Std': std})

df = pd.DataFrame(records)

# Plot setup
sns.set(style="whitegrid")

for var in df['Variable'].unique():
    plt.figure(figsize=(3, 4))
    subset = df[df['Variable'] == var].copy()
    # Reset index so we can use 'Std' as a list for yerr
    subset.reset_index(drop=True, inplace=True)
    
    ax = sns.barplot(
        data=subset,
        x='Source', y='Mean',
        hue=None, palette='tab10',
        capsize=0.2,
        errorbar=None  # disable built-in error bars
    )
    
    # Add error bars manually
    x_coords = range(len(subset))
    y_means = subset['Mean'].values
    y_errs = subset['Std'].values
    ax.errorbar(x=x_coords, y=y_means, yerr=y_errs, fmt='none', c='black', capsize=5)
    # Draw chance level
    chance = chance_levels[var]
    plt.axhline(chance, color='red', linestyle='--', label='Chance level')

    # plt.title(f'Accuracy for {var}')
    plt.ylim(0, 1)
    plt.ylabel('Accuracy')
    plt.xlabel('Decoding Input')
    plt.tight_layout()
    plt.savefig(f"{saved_dir}/pickup_high_{var}.png")
    plt.show()
